{"version":3,"sources":["contexts/catchingContext.js","img/red-pokeball.png","components/Navbar.js","components/SearchBar.js","components/Pagination.js","img/black-pokeball.png","components/Pokemon.js","components/Pokedex.js","api/PokeAPI.js","App.js","reportWebVitals.js","index.js"],"names":["CatchingContext","React","createContext","caughtPokemons","updateCatching","id","CatchingProvider","Provider","Navbar","onClickPokeball","useContext","src","alt","className","onClick","pokeball","length","SearchBar","onSearch","useState","search","setSearch","evt","a","type","placeholder","onChange","target","value","onKeyPress","key","Pagination","props","onLeftClick","onRightClick","page","totalPages","Pokemon","pokemon","includes","name","redPokeball","emptyPokeball","urlImg","substr","e","preventDefault","types","map","idx","Pokedex","pokemons","setPage","total","loading","nextPage","Math","max","min","getPokemons","limit","offset","url","fetch","response","json","data","getPokemonsName","pokemonsName","results","console","log","getPokemonData","getPokemonsData","promises","Promise","all","localStorageKey","App","setPokemons","lastPage","setLastPage","setTotal","setLoading","setCaughtPokemons","searching","setSearching","viewCaught","setViewCaught","setPokemonsName","notFound","setNotFound","fetchPokemons","ceil","getPokemonsNames","pokeNames","useEffect","JSON","parse","window","localStorage","getItem","loadCaughtPokemons","searchOnPokemonsName","text","filter","indexOf","result","renderCaught","pokemonName","updated","isFavorite","splice","push","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf8feef5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CatchingContext = React.createContext({\r\n\tcaughtPokemons: [],\r\n\tupdateCatching: (id) => null,\r\n});\r\n\r\nexport const CatchingProvider = CatchingContext.Provider;\r\n\r\nexport default CatchingContext;\r\n","export default __webpack_public_path__ + \"static/media/red-pokeball.13568f53.png\";","import React, { useContext } from 'react';\r\nimport CatchingContext from '../contexts/catchingContext';\r\nimport pokeball from '../img/red-pokeball.png';\r\n\r\nconst Navbar = ({ onClickPokeball }) => {\r\n\tlet imgUrl = 'https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png';\r\n\r\n\tconst { caughtPokemons } = useContext(CatchingContext);\r\n\r\n\tconst onClick = () => {\r\n\t\tonClickPokeball();\r\n\t};\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<div>\r\n\t\t\t\t<img src={imgUrl} alt='PokeApi Title' className='navbar-image' />\r\n\t\t\t</div>\r\n\t\t\t<div className='navbar-space'></div>\r\n\t\t\t<div onClick={onClick} className='catching-container'>\r\n\t\t\t\t<img className='catching-img' src={pokeball} alt='pokeball' /> <p>{caughtPokemons.length}</p>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tconst onChange = (evt) => {\r\n\t\tsetSearch(evt.target.value);\r\n\t\tif (evt.target.value.length === 0) {\r\n\t\t\tonSearch(null);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onKeyPress = (evt) => {\r\n\t\tif (evt.key === 'Enter') {\r\n\t\t\tonSearch(search);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onClick = async (evt) => {\r\n\t\tonSearch(search);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='searchbar-container'>\r\n\t\t\t<div className='searchbar'>\r\n\t\t\t\t<input type='text' placeholder='Search by name...' onChange={onChange} onKeyPress={onKeyPress} />\r\n\t\t\t</div>\r\n\t\t\t<div className='searchbar-btn'>\r\n\t\t\t\t<button onClick={onClick}>\r\n\t\t\t\t\t<span>Search</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n\tconst { onLeftClick, onRightClick, page, totalPages } = props;\r\n\treturn (\r\n\t\t<div className='pagination'>\r\n\t\t\t<button onClick={onLeftClick}>\r\n\t\t\t\t<div>ðŸ‘ˆ</div>\r\n\t\t\t</button>\r\n\t\t\t<div className='pagination-text'>\r\n\t\t\t\t<span className='yellow'>{page}</span> of {totalPages}\r\n\t\t\t</div>\r\n\t\t\t<button onClick={onRightClick}>ðŸ‘‰</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pagination;\r\n","export default __webpack_public_path__ + \"static/media/black-pokeball.c3d9fe59.png\";","import React, { useContext } from 'react';\r\nimport emptyPokeball from '../img/black-pokeball.png';\r\nimport redPokeball from '../img/red-pokeball.png';\r\nimport CatchingContext from '../contexts/catchingContext';\r\n\r\nconst Pokemon = ({ pokemon }) => {\r\n\tconst { caughtPokemons, updateCatching } = useContext(CatchingContext);\r\n\tconst pokeball = caughtPokemons.includes(pokemon.name) ? redPokeball : emptyPokeball;\r\n\r\n\tconst clickPokeball = (e) => {\r\n\t\te.preventDefault();\r\n\t\tupdateCatching(pokemon.name);\r\n\t};\r\n\r\n\tconst zeroFilled = (x) => ('000' + x).substr(-3);\r\n\tconst urlImg = `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${zeroFilled(pokemon.id)}.png`;\r\n\r\n\treturn (\r\n\t\t<div className='pokemon-card' onClick={clickPokeball}>\r\n\t\t\t<div className='pokemon-img-container'>\r\n\t\t\t\t<img className='pokemon-img' src={urlImg} alt={`${pokemon.name}`} />\r\n\t\t\t</div>\r\n\t\t\t<h3 className='card-id'># {('000' + pokemon.id).substr(-3)}</h3>\r\n\t\t\t<h3 className='card-name'>{pokemon.name}</h3>\r\n\t\t\t<div className='pokemon-types'>\r\n\t\t\t\t{pokemon.types.map((type, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={idx} className={`pokemon-types-text ${type.type.name}`}>\r\n\t\t\t\t\t\t\t{type.type.name}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className='pokemon-caught'>\r\n\t\t\t\t<img src={pokeball} alt='Pokeball' />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from 'react';\r\nimport Pagination from './Pagination';\r\nimport Pokemon from './Pokemon';\r\n\r\nconst Pokedex = ({ pokemons, page, setPage, total, loading }) => {\r\n\tconst lastPage = () => {\r\n\t\tconst nextPage = Math.max(page - 1, 0);\r\n\t\tsetPage(nextPage);\r\n\t};\r\n\r\n\tconst nextPage = () => {\r\n\t\tconst nextPage = Math.min(page + 1, total - 1);\r\n\t\tsetPage(nextPage);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='header'>\r\n\t\t\t\t<Pagination page={page + 1} totalPages={total} onLeftClick={lastPage} onRightClick={nextPage} />\r\n\t\t\t</div>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div className='loader-container'>\r\n\t\t\t\t\t<div className='loader'></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className='pokedex-container'>\r\n\t\t\t\t\t{pokemons.map((pokemon, idx) => {\r\n\t\t\t\t\t\treturn <Pokemon pokemon={pokemon} key={pokemon.name} />;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pokedex;\r\n","export const searchPokemon = async (pokemon) => {\r\n\ttry {\r\n\t\tlet url = `https://pokeapi.co/api/v2/pokemon/${pokemon}/`;\r\n\t\tconst response = await fetch(url);\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t} catch (error) {}\r\n};\r\n\r\nexport const getPokemons = async (limit = 25, offset = 0) => {\r\n\ttry {\r\n\t\tlet url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n\t\tconst response = await fetch(url);\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t} catch (error) {}\r\n};\r\n\r\nexport const getPokemonsName = async (limit = 898, offset = 0) => {\r\n\ttry {\r\n\t\tlet url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n\t\tconst response = await fetch(url);\r\n\t\tconst data = await response.json();\r\n\t\tconst pokemonsName = data.results.map((pokemon) => pokemon.name);\r\n\t\treturn pokemonsName;\r\n\t} catch (error) {\r\n\t\tconsole.log('API Problem: ', error);\r\n\t}\r\n};\r\n\r\nexport const getPokemonData = async (name) => {\r\n\tconst url = `https://pokeapi.co/api/v2/pokemon/${name}/`;\r\n\ttry {\r\n\t\tlet response = await fetch(url);\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const getPokemonsData = async (pokemons) => {\r\n\tconst promises = pokemons.map(async (pokemon) => {\r\n\t\treturn await getPokemonData(pokemon);\r\n\t});\r\n\r\n\tconst results = await Promise.all(promises);\r\n\treturn results;\r\n};\r\n","import './styles.css';\nimport Navbar from './components/Navbar';\nimport SearchBar from './components/SearchBar';\nimport Pokedex from './components/Pokedex';\nimport { getPokemonData, getPokemons, getPokemonsData, getPokemonsName } from './api/PokeAPI';\n\nimport React, { useState, useEffect } from 'react';\nimport { CatchingProvider } from './contexts/catchingContext';\n\nconst localStorageKey = 'caught_pokemons';\n\nfunction App() {\n\tconst [pokemons, setPokemons] = useState([]);\n\tconst [page, setPage] = useState(0);\n\tconst [lastPage, setLastPage] = useState(0);\n\tconst [total, setTotal] = useState(0);\n\tconst [loading, setLoading] = useState(true);\n\tconst [caughtPokemons, setCaughtPokemons] = useState([]);\n\tconst [searching, setSearching] = useState(false);\n\tconst [viewCaught, setViewCaught] = useState(false);\n\tconst [pokemonsName, setPokemonsName] = useState([]);\n\n\tconst [notFound, setNotFound] = useState(false);\n\n\tconst fetchPokemons = async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst data = await getPokemons(page === 35 ? 23 : 25, 25 * page);\n\t\t\tconst promises = data.results.map(async (pokemon) => {\n\t\t\t\treturn await getPokemonData(pokemon.name);\n\t\t\t});\n\t\t\tconst results = await Promise.all(promises);\n\t\t\tsetPokemons(results);\n\t\t\tsetLoading(false);\n\t\t\tsetTotal(Math.ceil(898 / 25));\n\t\t\tsetNotFound(false);\n\t\t} catch (err) {}\n\t};\n\n\tconst loadCaughtPokemons = () => {\n\t\tconst pokemons = JSON.parse(window.localStorage.getItem(localStorageKey)) || [];\n\n\t\tsetCaughtPokemons(pokemons);\n\t};\n\n\tconst getPokemonsNames = async () => {\n\t\tconst pokeNames = await getPokemonsName();\n\t\tsetPokemonsName(pokeNames);\n\t};\n\n\tuseEffect(() => {\n\t\tloadCaughtPokemons();\n\t\tgetPokemonsNames();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (!searching && !viewCaught) {\n\t\t\tfetchPokemons();\n\t\t}\n\t}, [page]); // eslint-disable-line react-hooks/exhaustive-deps\n\n\tconst updateCatching = (name) => {\n\t\tconst updated = [...caughtPokemons];\n\t\tconst isFavorite = updated.indexOf(name);\n\t\tif (isFavorite >= 0) {\n\t\t\tupdated.splice(isFavorite, 1);\n\t\t} else {\n\t\t\tupdated.push(name);\n\t\t}\n\t\tsetCaughtPokemons(updated);\n\t\twindow.localStorage.setItem(localStorageKey, JSON.stringify(updated));\n\t};\n\n\tconst searchOnPokemonsName = (text) => {\n\t\tconst filteredPokemons = pokemonsName.filter((name) => {\n\t\t\treturn name.indexOf(text) > -1;\n\t\t});\n\t\treturn filteredPokemons;\n\t};\n\n\tconst onSearch = async (pokemon) => {\n\t\tif (!pokemon) {\n\t\t\treturn fetchPokemons();\n\t\t}\n\t\tsetLoading(true);\n\t\tsetNotFound(false);\n\t\tsetSearching(true);\n\t\tconst result = await getPokemonsData(searchOnPokemonsName(pokemon));\n\t\tif (!result) {\n\t\t\tsetNotFound(true);\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tsetPokemons(result);\n\t\t\tsetPage(0);\n\t\t\tsetTotal(1);\n\t\t}\n\t\tsetLoading(false);\n\t\tsetSearching(false);\n\t};\n\n\tconst renderCaught = async () => {\n\t\tif (!viewCaught) {\n\t\t\ttry {\n\t\t\t\tsetViewCaught(true);\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst promises = caughtPokemons.map(async (pokemonName) => {\n\t\t\t\t\treturn await getPokemonData(pokemonName);\n\t\t\t\t});\n\t\t\t\tconst results = await Promise.all(promises);\n\t\t\t\tsetPokemons(results);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetLastPage(page);\n\t\t\t\tsetPage(0);\n\t\t\t\tsetTotal(1);\n\t\t\t} catch (err) {}\n\t\t} else {\n\t\t\tsetViewCaught(false);\n\t\t\tsetPage(lastPage);\n\t\t\tfetchPokemons();\n\t\t}\n\t};\n\n\treturn (\n\t\t<CatchingProvider value={{ caughtPokemons: caughtPokemons, updateCatching: updateCatching }}>\n\t\t\t<div>\n\t\t\t\t<Navbar onClickPokeball={renderCaught} />\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<SearchBar onSearch={onSearch} />\n\t\t\t\t\t{notFound ? <div className='not-found-text'>Pokemon not found ðŸ˜­</div> : <Pokedex loading={loading} pokemons={pokemons} page={page} setPage={setPage} total={total} />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CatchingProvider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}